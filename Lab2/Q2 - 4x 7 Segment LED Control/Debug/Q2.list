
Q2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000240  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init         00000004  08000240  08000240  00010240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         00000004  08000244  08000244  00010244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         00000000  20000000  20000000  00010248  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  20000000  20000000  00000000  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00010248  2**0
                  CONTENTS, READONLY
  6 .debug_line   00000147  00000000  00000000  00010270  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000026  00000000  00000000  000103b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000014  00000000  00000000  000103dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_aranges 00000020  00000000  00000000  000103f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000057  00000000  00000000  00010418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000000 <vector_table>:
 8000000:	20002000 	.word	0x20002000
 8000004:	08000021 	.word	0x08000021
 8000008:	08000057 	.word	0x08000057
 800000c:	08000057 	.word	0x08000057
 8000010:	20000000 	.word	0x20000000
 8000014:	20000000 	.word	0x20000000
 8000018:	20000000 	.word	0x20000000
 800001c:	20000000 	.word	0x20000000

08000020 <Reset_Handler>:

// reset handler
.section .text
Reset_Handler:
	// set stack pointer
	ldr r0, =_estack
 8000020:	486c      	ldr	r0, [pc, #432]	; (80001d4 <NSCountinue+0x6>)
	mov sp, r0
 8000022:	4685      	mov	sp, r0

	// initialize data and bss
	// not necessary for rom only code

	bl init_data
 8000024:	f000 f803 	bl	800002e <init_data>
	// call main
	bl main
 8000028:	f000 f816 	bl	8000058 <main>
	// trap if returned
	b .
 800002c:	e7fe      	b.n	800002c <Reset_Handler+0xc>

0800002e <init_data>:
// initialize data and bss sections
.section .text
init_data:

	// copy rom to ram
	ldr r0, =_sdata
 800002e:	486a      	ldr	r0, [pc, #424]	; (80001d8 <NSCountinue+0xa>)
	ldr r1, =_edata
 8000030:	496a      	ldr	r1, [pc, #424]	; (80001dc <NSCountinue+0xe>)
	ldr r2, =_sidata
 8000032:	4a6b      	ldr	r2, [pc, #428]	; (80001e0 <NSCountinue+0x12>)
	movs r3, #0
 8000034:	2300      	movs	r3, #0
	b LoopCopyDataInit
 8000036:	e002      	b.n	800003e <LoopCopyDataInit>

08000038 <CopyDataInit>:

	CopyDataInit:
		ldr r4, [r2, r3]
 8000038:	58d4      	ldr	r4, [r2, r3]
		str r4, [r0, r3]
 800003a:	50c4      	str	r4, [r0, r3]
		adds r3, r3, #4
 800003c:	3304      	adds	r3, #4

0800003e <LoopCopyDataInit>:

	LoopCopyDataInit:
		adds r4, r0, r3
 800003e:	18c4      	adds	r4, r0, r3
		cmp r4, r1
 8000040:	428c      	cmp	r4, r1
		bcc CopyDataInit
 8000042:	d3f9      	bcc.n	8000038 <CopyDataInit>

	// zero bss
	ldr r2, =_sbss
 8000044:	4a67      	ldr	r2, [pc, #412]	; (80001e4 <NSCountinue+0x16>)
	ldr r4, =_ebss
 8000046:	4c68      	ldr	r4, [pc, #416]	; (80001e8 <NSCountinue+0x1a>)
	movs r3, #0
 8000048:	2300      	movs	r3, #0
	b LoopFillZerobss
 800004a:	e001      	b.n	8000050 <LoopFillZerobss>

0800004c <FillZerobss>:

	FillZerobss:
		str  r3, [r2]
 800004c:	6013      	str	r3, [r2, #0]
		adds r2, r2, #4
 800004e:	3204      	adds	r2, #4

08000050 <LoopFillZerobss>:

	LoopFillZerobss:
		cmp r2, r4
 8000050:	42a2      	cmp	r2, r4
		bcc FillZerobss
 8000052:	d3fb      	bcc.n	800004c <FillZerobss>

	bx lr
 8000054:	4770      	bx	lr

08000056 <Default_Handler>:

// default handler
.section .text
Default_Handler:
	b Default_Handler
 8000056:	e7fe      	b.n	8000056 <Default_Handler>

08000058 <main>:

// main function
.section .text
main:
	// enable GPIOB clock, bit1 on IOPENR
	ldr r6, =RCC_IOPENR
 8000058:	4e64      	ldr	r6, [pc, #400]	; (80001ec <NSCountinue+0x1e>)
	ldr r5, [r6]
 800005a:	6835      	ldr	r5, [r6, #0]
	// movs expects imm8, so this should be fine
	movs r4, 0x3
 800005c:	2403      	movs	r4, #3
	orrs r5, r5, r4
 800005e:	4325      	orrs	r5, r4
	str r5, [r6]
 8000060:	6035      	str	r5, [r6, #0]

	// setup PA8, PA9, PA10 and PA15 for 01 in MODER
	ldr r6, =GPIOA_MODER
 8000062:	4e63      	ldr	r6, [pc, #396]	; (80001f0 <NSCountinue+0x22>)
	ldr r5, [r6]
 8000064:	6835      	ldr	r5, [r6, #0]
	// cannot do with movs, so use pc relative
	//ldr r5, =[0xFFFFFFFF]
	//str r5, [r6]
	ldr r4, =[0x7FD50000]
 8000066:	4c63      	ldr	r4, [pc, #396]	; (80001f4 <NSCountinue+0x26>)
	ands r5, r5, r4
 8000068:	4025      	ands	r5, r4
	str r5, [r6]
 800006a:	6035      	str	r5, [r6, #0]

	// setup PB0, PB1, PB2 ....PB9 for 01 and PB5 for 00 in MODER
	ldr r6, =GPIOB_MODER
 800006c:	4e62      	ldr	r6, [pc, #392]	; (80001f8 <NSCountinue+0x2a>)
	ldr r5, [r6]
 800006e:	6835      	ldr	r5, [r6, #0]
	// cannot do with movs, so use pc relative
	//ldr r5, =[0xFFFFF]
	//str r5, [r6]
	ldr r4, =[0x55055]
 8000070:	4c62      	ldr	r4, [pc, #392]	; (80001fc <NSCountinue+0x2e>)
	ands r5, r5, r4
 8000072:	4025      	ands	r5, r4
	str r5, [r6]
 8000074:	6035      	str	r5, [r6, #0]

	//D1 Active
	ldr r6, =GPIOA_ODR
 8000076:	4e62      	ldr	r6, [pc, #392]	; (8000200 <NSCountinue+0x32>)
	ldr r5, [r6]
 8000078:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x0700]
 800007a:	4c62      	ldr	r4, [pc, #392]	; (8000204 <NSCountinue+0x36>)
	orrs r5, r5, r4
 800007c:	4325      	orrs	r5, r4
	str r5, [r6]
 800007e:	6035      	str	r5, [r6, #0]

	movs r3, [0x0]
 8000080:	2300      	movs	r3, #0
	movs r2, [0x0]
 8000082:	2200      	movs	r2, #0

08000084 <Loop>:

	Loop:
	ldr r6, = GPIOB_IDR
 8000084:	4e60      	ldr	r6, [pc, #384]	; (8000208 <NSCountinue+0x3a>)
	ldr r5, [r6] //IDR Value
 8000086:	6835      	ldr	r5, [r6, #0]
	movs r4, #0x20 //Status switch connected to PB6
 8000088:	2420      	movs	r4, #32
	ands r5, r5, r4 //Getting the value of button pressed or not
 800008a:	4025      	ands	r5, r4
	lsrs r5, #5 //Shifting to lsb for compare
 800008c:	096d      	lsrs	r5, r5, #5

	cmp r5, #0x1 //Compare IDR Value with 1 bit
 800008e:	2d01      	cmp	r5, #1
	beq changeNumber //If equal
 8000090:	d003      	beq.n	800009a <changeNumber>

	ldr r1, =delayInterval
 8000092:	495e      	ldr	r1, [pc, #376]	; (800020c <NSCountinue+0x3e>)

08000094 <Delay>:
	Delay:
	subs r1, r1, #1
 8000094:	3901      	subs	r1, #1
	bne Delay
 8000096:	d1fd      	bne.n	8000094 <Delay>

	b Loop
 8000098:	e7f4      	b.n	8000084 <Loop>

0800009a <changeNumber>:

/*----------------------------------*/

	changeNumber:
	cmp r2, [0x0]
 800009a:	2a00      	cmp	r2, #0
	beq FirstNumber
 800009c:	d004      	beq.n	80000a8 <FirstNumber>
	cmp r2, [0x1]
 800009e:	2a01      	cmp	r2, #1
	beq SecondNumber
 80000a0:	d007      	beq.n	80000b2 <SecondNumber>
	cmp r2, [0x2]
 80000a2:	2a02      	cmp	r2, #2
	beq ThirdNumber
 80000a4:	d00a      	beq.n	80000bc <ThirdNumber>
	bne CNCountinue
 80000a6:	d10e      	bne.n	80000c6 <CNCountinue>

080000a8 <FirstNumber>:

	FirstNumber:
	movs r3, [0x1]
 80000a8:	2301      	movs	r3, #1
	bl NumberSelect
 80000aa:	f000 f80d 	bl	80000c8 <NumberSelect>
	movs r2, [0x1]
 80000ae:	2201      	movs	r2, #1
	b CNCountinue
 80000b0:	e009      	b.n	80000c6 <CNCountinue>

080000b2 <SecondNumber>:

	SecondNumber:
	movs r3, [0x5]
 80000b2:	2305      	movs	r3, #5
	bl NumberSelect
 80000b4:	f000 f808 	bl	80000c8 <NumberSelect>
	movs r2, [0x2]
 80000b8:	2202      	movs	r2, #2
	b CNCountinue
 80000ba:	e004      	b.n	80000c6 <CNCountinue>

080000bc <ThirdNumber>:

	ThirdNumber:
	movs r3, [0x9]
 80000bc:	2309      	movs	r3, #9
	bl NumberSelect
 80000be:	f000 f803 	bl	80000c8 <NumberSelect>
	movs r2, [0x0]
 80000c2:	2200      	movs	r2, #0
	b CNCountinue
 80000c4:	e7ff      	b.n	80000c6 <CNCountinue>

080000c6 <CNCountinue>:

	CNCountinue:
	b Loop
 80000c6:	e7dd      	b.n	8000084 <Loop>

080000c8 <NumberSelect>:

/*------------------------------------------*/

	NumberSelect:
	cmp r3, [0x0]
 80000c8:	2b00      	cmp	r3, #0
	beq NumberZero
 80000ca:	d012      	beq.n	80000f2 <NumberZero>
	cmp r3, [0x1]
 80000cc:	2b01      	cmp	r3, #1
	beq NumberOne
 80000ce:	d01b      	beq.n	8000108 <NumberOne>
	cmp r3, [0x2]
 80000d0:	2b02      	cmp	r3, #2
	beq NumberTwo
 80000d2:	d024      	beq.n	800011e <NumberTwo>
	cmp r3, [0x3]
 80000d4:	2b03      	cmp	r3, #3
	beq NumberThree
 80000d6:	d02d      	beq.n	8000134 <NumberThree>
	cmp r3, [0x4]
 80000d8:	2b04      	cmp	r3, #4
	beq NumberFour
 80000da:	d036      	beq.n	800014a <NumberFour>
	cmp r3, [0x5]
 80000dc:	2b05      	cmp	r3, #5
	beq NumberFive
 80000de:	d03f      	beq.n	8000160 <NumberFive>
	cmp r3, [0x6]
 80000e0:	2b06      	cmp	r3, #6
	beq NumberSix
 80000e2:	d048      	beq.n	8000176 <NumberSix>
	cmp r3, [0x7]
 80000e4:	2b07      	cmp	r3, #7
	beq NumberSeven
 80000e6:	d051      	beq.n	800018c <NumberSeven>
	cmp r3, [0x8]
 80000e8:	2b08      	cmp	r3, #8
	beq NumberEight
 80000ea:	d05a      	beq.n	80001a2 <NumberEight>
	cmp r3, [0x9]
 80000ec:	2b09      	cmp	r3, #9
	beq NumberNine
 80000ee:	d063      	beq.n	80001b8 <NumberNine>
	bne NSCountinue
 80000f0:	d16d      	bne.n	80001ce <NSCountinue>

080000f2 <NumberZero>:

	NumberZero:
	ldr r6, =GPIOB_ODR
 80000f2:	4e47      	ldr	r6, [pc, #284]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 80000f4:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 80000f6:	4c47      	ldr	r4, [pc, #284]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 80000f8:	43a5      	bics	r5, r4
	str r5, [r6]
 80000fa:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 80000fc:	4e44      	ldr	r6, [pc, #272]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 80000fe:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x1C7]
 8000100:	4c45      	ldr	r4, [pc, #276]	; (8000218 <NSCountinue+0x4a>)
	orrs r5, r5, r4
 8000102:	4325      	orrs	r5, r4
	str r5, [r6]
 8000104:	6035      	str	r5, [r6, #0]
	b NSCountinue
 8000106:	e062      	b.n	80001ce <NSCountinue>

08000108 <NumberOne>:

	NumberOne:
	ldr r6, =GPIOB_ODR
 8000108:	4e41      	ldr	r6, [pc, #260]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 800010a:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 800010c:	4c41      	ldr	r4, [pc, #260]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 800010e:	43a5      	bics	r5, r4
	str r5, [r6]
 8000110:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 8000112:	4e3f      	ldr	r6, [pc, #252]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000114:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x42]
 8000116:	4c41      	ldr	r4, [pc, #260]	; (800021c <NSCountinue+0x4e>)
	orrs r5, r5, r4
 8000118:	4325      	orrs	r5, r4
	str r5, [r6]
 800011a:	6035      	str	r5, [r6, #0]
	b NSCountinue
 800011c:	e057      	b.n	80001ce <NSCountinue>

0800011e <NumberTwo>:

	NumberTwo:
	ldr r6, =GPIOB_ODR
 800011e:	4e3c      	ldr	r6, [pc, #240]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000120:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 8000122:	4c3c      	ldr	r4, [pc, #240]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 8000124:	43a5      	bics	r5, r4
	str r5, [r6]
 8000126:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 8000128:	4e39      	ldr	r6, [pc, #228]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 800012a:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x2C5]
 800012c:	4c3c      	ldr	r4, [pc, #240]	; (8000220 <NSCountinue+0x52>)
	orrs r5, r5, r4
 800012e:	4325      	orrs	r5, r4
	str r5, [r6]
 8000130:	6035      	str	r5, [r6, #0]
	b NSCountinue
 8000132:	e04c      	b.n	80001ce <NSCountinue>

08000134 <NumberThree>:

	NumberThree:
	ldr r6, =GPIOB_ODR
 8000134:	4e36      	ldr	r6, [pc, #216]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000136:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 8000138:	4c36      	ldr	r4, [pc, #216]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 800013a:	43a5      	bics	r5, r4
	str r5, [r6]
 800013c:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 800013e:	4e34      	ldr	r6, [pc, #208]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000140:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x2C3]
 8000142:	4c38      	ldr	r4, [pc, #224]	; (8000224 <NSCountinue+0x56>)
	orrs r5, r5, r4
 8000144:	4325      	orrs	r5, r4
	str r5, [r6]
 8000146:	6035      	str	r5, [r6, #0]
	b NSCountinue
 8000148:	e041      	b.n	80001ce <NSCountinue>

0800014a <NumberFour>:

	NumberFour:
	ldr r6, =GPIOB_ODR
 800014a:	4e31      	ldr	r6, [pc, #196]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 800014c:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 800014e:	4c31      	ldr	r4, [pc, #196]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 8000150:	43a5      	bics	r5, r4
	str r5, [r6]
 8000152:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 8000154:	4e2e      	ldr	r6, [pc, #184]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000156:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x342]
 8000158:	4c33      	ldr	r4, [pc, #204]	; (8000228 <NSCountinue+0x5a>)
	orrs r5, r5, r4
 800015a:	4325      	orrs	r5, r4
	str r5, [r6]
 800015c:	6035      	str	r5, [r6, #0]
	b NSCountinue
 800015e:	e036      	b.n	80001ce <NSCountinue>

08000160 <NumberFive>:

	NumberFive:
	ldr r6, =GPIOB_ODR
 8000160:	4e2b      	ldr	r6, [pc, #172]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000162:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 8000164:	4c2b      	ldr	r4, [pc, #172]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 8000166:	43a5      	bics	r5, r4
	str r5, [r6]
 8000168:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 800016a:	4e29      	ldr	r6, [pc, #164]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 800016c:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x383]
 800016e:	4c2f      	ldr	r4, [pc, #188]	; (800022c <NSCountinue+0x5e>)
	orrs r5, r5, r4
 8000170:	4325      	orrs	r5, r4
	str r5, [r6]
 8000172:	6035      	str	r5, [r6, #0]
	b NSCountinue
 8000174:	e02b      	b.n	80001ce <NSCountinue>

08000176 <NumberSix>:

	NumberSix:
	ldr r6, =GPIOB_ODR
 8000176:	4e26      	ldr	r6, [pc, #152]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000178:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 800017a:	4c26      	ldr	r4, [pc, #152]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 800017c:	43a5      	bics	r5, r4
	str r5, [r6]
 800017e:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 8000180:	4e23      	ldr	r6, [pc, #140]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000182:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x387]
 8000184:	4c2a      	ldr	r4, [pc, #168]	; (8000230 <NSCountinue+0x62>)
	orrs r5, r5, r4
 8000186:	4325      	orrs	r5, r4
	str r5, [r6]
 8000188:	6035      	str	r5, [r6, #0]
	b NSCountinue
 800018a:	e020      	b.n	80001ce <NSCountinue>

0800018c <NumberSeven>:

	NumberSeven:
	ldr r6, =GPIOB_ODR
 800018c:	4e20      	ldr	r6, [pc, #128]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 800018e:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 8000190:	4c20      	ldr	r4, [pc, #128]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 8000192:	43a5      	bics	r5, r4
	str r5, [r6]
 8000194:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 8000196:	4e1e      	ldr	r6, [pc, #120]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 8000198:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xC2]
 800019a:	4c26      	ldr	r4, [pc, #152]	; (8000234 <NSCountinue+0x66>)
	orrs r5, r5, r4
 800019c:	4325      	orrs	r5, r4
	str r5, [r6]
 800019e:	6035      	str	r5, [r6, #0]
	b NSCountinue
 80001a0:	e015      	b.n	80001ce <NSCountinue>

080001a2 <NumberEight>:

	NumberEight:
	ldr r6, =GPIOB_ODR
 80001a2:	4e1b      	ldr	r6, [pc, #108]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 80001a4:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 80001a6:	4c1b      	ldr	r4, [pc, #108]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 80001a8:	43a5      	bics	r5, r4
	str r5, [r6]
 80001aa:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 80001ac:	4e18      	ldr	r6, [pc, #96]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 80001ae:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x3C7]
 80001b0:	4c21      	ldr	r4, [pc, #132]	; (8000238 <NSCountinue+0x6a>)
	orrs r5, r5, r4
 80001b2:	4325      	orrs	r5, r4
	str r5, [r6]
 80001b4:	6035      	str	r5, [r6, #0]
	b NSCountinue
 80001b6:	e00a      	b.n	80001ce <NSCountinue>

080001b8 <NumberNine>:

	NumberNine:
	ldr r6, =GPIOB_ODR
 80001b8:	4e15      	ldr	r6, [pc, #84]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 80001ba:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0xFFF]
 80001bc:	4c15      	ldr	r4, [pc, #84]	; (8000214 <NSCountinue+0x46>)
	bics r5, r5, r4
 80001be:	43a5      	bics	r5, r4
	str r5, [r6]
 80001c0:	6035      	str	r5, [r6, #0]
	ldr r6, =GPIOB_ODR
 80001c2:	4e13      	ldr	r6, [pc, #76]	; (8000210 <NSCountinue+0x42>)
	ldr r5, [r6]
 80001c4:	6835      	ldr	r5, [r6, #0]
	ldr r4, =[0x3C3]
 80001c6:	4c1d      	ldr	r4, [pc, #116]	; (800023c <NSCountinue+0x6e>)
	orrs r5, r5, r4
 80001c8:	4325      	orrs	r5, r4
	str r5, [r6]
 80001ca:	6035      	str	r5, [r6, #0]
	b NSCountinue
 80001cc:	e7ff      	b.n	80001ce <NSCountinue>

080001ce <NSCountinue>:

	NSCountinue:
	bx lr
 80001ce:	4770      	bx	lr
	str r5, [r6]
	bx lr
	*/

	// this should never get executed
	nop
 80001d0:	46c0      	nop			; (mov r8, r8)
 80001d2:	0000      	.short	0x0000
	ldr r0, =_estack
 80001d4:	20002000 	.word	0x20002000
	ldr r0, =_sdata
 80001d8:	20000000 	.word	0x20000000
	ldr r1, =_edata
 80001dc:	20000000 	.word	0x20000000
	ldr r2, =_sidata
 80001e0:	08000248 	.word	0x08000248
	ldr r2, =_sbss
 80001e4:	20000000 	.word	0x20000000
	ldr r4, =_ebss
 80001e8:	20000000 	.word	0x20000000
	ldr r6, =RCC_IOPENR
 80001ec:	40021034 	.word	0x40021034
	ldr r6, =GPIOA_MODER
 80001f0:	50000000 	.word	0x50000000
	ldr r4, =[0x7FD50000]
 80001f4:	7fd50000 	.word	0x7fd50000
	ldr r6, =GPIOB_MODER
 80001f8:	50000400 	.word	0x50000400
	ldr r4, =[0x55055]
 80001fc:	00055055 	.word	0x00055055
	ldr r6, =GPIOA_ODR
 8000200:	50000014 	.word	0x50000014
	ldr r4, =[0x0700]
 8000204:	00000700 	.word	0x00000700
	ldr r6, = GPIOB_IDR
 8000208:	50000410 	.word	0x50000410
	ldr r1, =delayInterval
 800020c:	00035b60 	.word	0x00035b60
	ldr r6, =GPIOB_ODR
 8000210:	50000414 	.word	0x50000414
	ldr r4, =[0xFFF]
 8000214:	00000fff 	.word	0x00000fff
	ldr r4, =[0x1C7]
 8000218:	000001c7 	.word	0x000001c7
	ldr r4, =[0x42]
 800021c:	00000042 	.word	0x00000042
	ldr r4, =[0x2C5]
 8000220:	000002c5 	.word	0x000002c5
	ldr r4, =[0x2C3]
 8000224:	000002c3 	.word	0x000002c3
	ldr r4, =[0x342]
 8000228:	00000342 	.word	0x00000342
	ldr r4, =[0x383]
 800022c:	00000383 	.word	0x00000383
	ldr r4, =[0x387]
 8000230:	00000387 	.word	0x00000387
	ldr r4, =[0xC2]
 8000234:	000000c2 	.word	0x000000c2
	ldr r4, =[0x3C7]
 8000238:	000003c7 	.word	0x000003c7
	ldr r4, =[0x3C3]
 800023c:	000003c3 	.word	0x000003c3

Disassembly of section .init:

08000240 <_init>:
 8000240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000242:	46c0      	nop			; (mov r8, r8)

Disassembly of section .fini:

08000244 <_fini>:
 8000244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000246:	46c0      	nop			; (mov r8, r8)
