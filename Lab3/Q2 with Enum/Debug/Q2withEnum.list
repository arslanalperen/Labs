
Q2withEnum.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002d0  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  0800038c  0800038c  0001038c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  080003a4  080003a4  000103a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080003a8  080003a8  000103a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  000103ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  080003ac  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2000001c  080003ac  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000028  00000000  00000000  000103ac  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000ac7  00000000  00000000  000103d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000034f  00000000  00000000  00010e9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc    00000262  00000000  00000000  000111ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 000000d8  00000000  00000000  00011450  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges 000001a0  00000000  00000000  00011528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000b1f  00000000  00000000  000116c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    0000040f  00000000  00000000  000121e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000053  00000000  00000000  000125f6  2**0
                  CONTENTS, READONLY
 17 .debug_frame  0000016c  00000000  00000000  0001264c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000000 	.word	0x20000000
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08000374 	.word	0x08000374

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000004 	.word	0x20000004
 8000100:	08000374 	.word	0x08000374

08000104 <noToggleLedOff>:
    	delay(600000); //Delay for getting hand back from button
    }
}

void noToggleLedOff(){
	GPIOB->ODR &= ~(1U << 7);
 8000104:	2180      	movs	r1, #128	; 0x80
 8000106:	4a02      	ldr	r2, [pc, #8]	; (8000110 <noToggleLedOff+0xc>)
 8000108:	6953      	ldr	r3, [r2, #20]
 800010a:	438b      	bics	r3, r1
 800010c:	6153      	str	r3, [r2, #20]
}
 800010e:	4770      	bx	lr
 8000110:	50000400 	.word	0x50000400

08000114 <noToggleLedOn>:

void noToggleLedOn(){
	GPIOB->ODR |= (1U << 7);
 8000114:	2180      	movs	r1, #128	; 0x80
 8000116:	4a02      	ldr	r2, [pc, #8]	; (8000120 <noToggleLedOn+0xc>)
 8000118:	6953      	ldr	r3, [r2, #20]
 800011a:	430b      	orrs	r3, r1
 800011c:	6153      	str	r3, [r2, #20]
}
 800011e:	4770      	bx	lr
 8000120:	50000400 	.word	0x50000400

08000124 <Toggle2s>:

void Toggle2s(){
	GPIOB->ODR |= (1U << 7);
 8000124:	2180      	movs	r1, #128	; 0x80
 8000126:	4a09      	ldr	r2, [pc, #36]	; (800014c <Toggle2s+0x28>)
 8000128:	6953      	ldr	r3, [r2, #20]
 800012a:	430b      	orrs	r3, r1
 800012c:	6153      	str	r3, [r2, #20]
	delay(3200000);
 800012e:	4b08      	ldr	r3, [pc, #32]	; (8000150 <Toggle2s+0x2c>)
	GPIOB->ODR &= 0x0000;
	GPIOB->ODR |= 0x006D;
}

void delay(volatile uint32_t s) {
    for(; s>0; s--);
 8000130:	3b01      	subs	r3, #1
 8000132:	2b00      	cmp	r3, #0
 8000134:	d1fc      	bne.n	8000130 <Toggle2s+0xc>
	GPIOB->ODR &= ~(1U << 7);
 8000136:	2180      	movs	r1, #128	; 0x80
 8000138:	4a04      	ldr	r2, [pc, #16]	; (800014c <Toggle2s+0x28>)
 800013a:	6953      	ldr	r3, [r2, #20]
 800013c:	438b      	bics	r3, r1
 800013e:	6153      	str	r3, [r2, #20]
	delay(3200000);
 8000140:	4b03      	ldr	r3, [pc, #12]	; (8000150 <Toggle2s+0x2c>)
    for(; s>0; s--);
 8000142:	3b01      	subs	r3, #1
 8000144:	2b00      	cmp	r3, #0
 8000146:	d1fc      	bne.n	8000142 <Toggle2s+0x1e>
}
 8000148:	4770      	bx	lr
 800014a:	46c0      	nop			; (mov r8, r8)
 800014c:	50000400 	.word	0x50000400
 8000150:	0030d400 	.word	0x0030d400

08000154 <Toggle1s>:
	GPIOB->ODR |= (1U << 7);
 8000154:	2180      	movs	r1, #128	; 0x80
 8000156:	4a09      	ldr	r2, [pc, #36]	; (800017c <Toggle1s+0x28>)
 8000158:	6953      	ldr	r3, [r2, #20]
 800015a:	430b      	orrs	r3, r1
 800015c:	6153      	str	r3, [r2, #20]
	delay(1600000);
 800015e:	4b08      	ldr	r3, [pc, #32]	; (8000180 <Toggle1s+0x2c>)
    for(; s>0; s--);
 8000160:	3b01      	subs	r3, #1
 8000162:	2b00      	cmp	r3, #0
 8000164:	d1fc      	bne.n	8000160 <Toggle1s+0xc>
	GPIOB->ODR &= ~(1U << 7);
 8000166:	2180      	movs	r1, #128	; 0x80
 8000168:	4a04      	ldr	r2, [pc, #16]	; (800017c <Toggle1s+0x28>)
 800016a:	6953      	ldr	r3, [r2, #20]
 800016c:	438b      	bics	r3, r1
 800016e:	6153      	str	r3, [r2, #20]
	delay(1600000);
 8000170:	4b03      	ldr	r3, [pc, #12]	; (8000180 <Toggle1s+0x2c>)
    for(; s>0; s--);
 8000172:	3b01      	subs	r3, #1
 8000174:	2b00      	cmp	r3, #0
 8000176:	d1fc      	bne.n	8000172 <Toggle1s+0x1e>
}
 8000178:	4770      	bx	lr
 800017a:	46c0      	nop			; (mov r8, r8)
 800017c:	50000400 	.word	0x50000400
 8000180:	00186a00 	.word	0x00186a00

08000184 <Toggle05s>:
	GPIOB->ODR |= (1U << 7);
 8000184:	2180      	movs	r1, #128	; 0x80
 8000186:	4a09      	ldr	r2, [pc, #36]	; (80001ac <Toggle05s+0x28>)
 8000188:	6953      	ldr	r3, [r2, #20]
 800018a:	430b      	orrs	r3, r1
 800018c:	6153      	str	r3, [r2, #20]
	delay(800000);
 800018e:	4b08      	ldr	r3, [pc, #32]	; (80001b0 <Toggle05s+0x2c>)
    for(; s>0; s--);
 8000190:	3b01      	subs	r3, #1
 8000192:	2b00      	cmp	r3, #0
 8000194:	d1fc      	bne.n	8000190 <Toggle05s+0xc>
	GPIOB->ODR &= ~(1U << 7);
 8000196:	2180      	movs	r1, #128	; 0x80
 8000198:	4a04      	ldr	r2, [pc, #16]	; (80001ac <Toggle05s+0x28>)
 800019a:	6953      	ldr	r3, [r2, #20]
 800019c:	438b      	bics	r3, r1
 800019e:	6153      	str	r3, [r2, #20]
	delay(800000);
 80001a0:	4b03      	ldr	r3, [pc, #12]	; (80001b0 <Toggle05s+0x2c>)
    for(; s>0; s--);
 80001a2:	3b01      	subs	r3, #1
 80001a4:	2b00      	cmp	r3, #0
 80001a6:	d1fc      	bne.n	80001a2 <Toggle05s+0x1e>
}
 80001a8:	4770      	bx	lr
 80001aa:	46c0      	nop			; (mov r8, r8)
 80001ac:	50000400 	.word	0x50000400
 80001b0:	000c3500 	.word	0x000c3500

080001b4 <Toggle01s>:
	GPIOB->ODR |= (1U << 7);
 80001b4:	2180      	movs	r1, #128	; 0x80
 80001b6:	4a09      	ldr	r2, [pc, #36]	; (80001dc <Toggle01s+0x28>)
 80001b8:	6953      	ldr	r3, [r2, #20]
 80001ba:	430b      	orrs	r3, r1
 80001bc:	6153      	str	r3, [r2, #20]
	delay(160000);
 80001be:	4b08      	ldr	r3, [pc, #32]	; (80001e0 <Toggle01s+0x2c>)
    for(; s>0; s--);
 80001c0:	3b01      	subs	r3, #1
 80001c2:	2b00      	cmp	r3, #0
 80001c4:	d1fc      	bne.n	80001c0 <Toggle01s+0xc>
	GPIOB->ODR &= ~(1U << 7);
 80001c6:	2180      	movs	r1, #128	; 0x80
 80001c8:	4a04      	ldr	r2, [pc, #16]	; (80001dc <Toggle01s+0x28>)
 80001ca:	6953      	ldr	r3, [r2, #20]
 80001cc:	438b      	bics	r3, r1
 80001ce:	6153      	str	r3, [r2, #20]
	delay(160000);
 80001d0:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <Toggle01s+0x2c>)
    for(; s>0; s--);
 80001d2:	3b01      	subs	r3, #1
 80001d4:	2b00      	cmp	r3, #0
 80001d6:	d1fc      	bne.n	80001d2 <Toggle01s+0x1e>
}
 80001d8:	4770      	bx	lr
 80001da:	46c0      	nop			; (mov r8, r8)
 80001dc:	50000400 	.word	0x50000400
 80001e0:	00027100 	.word	0x00027100

080001e4 <main>:
    RCC->IOPENR |= (1U << 1);
 80001e4:	2102      	movs	r1, #2
int main(void) {
 80001e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80001e8:	46c6      	mov	lr, r8
    RCC->IOPENR |= (1U << 1);
 80001ea:	4a32      	ldr	r2, [pc, #200]	; (80002b4 <main+0xd0>)
    GPIOB->MODER &= 0xFFFC5555;
 80001ec:	4c32      	ldr	r4, [pc, #200]	; (80002b8 <main+0xd4>)
    RCC->IOPENR |= (1U << 1);
 80001ee:	6b53      	ldr	r3, [r2, #52]	; 0x34
int main(void) {
 80001f0:	b500      	push	{lr}
    RCC->IOPENR |= (1U << 1);
 80001f2:	430b      	orrs	r3, r1
 80001f4:	6353      	str	r3, [r2, #52]	; 0x34
    GPIOB->MODER &= 0xFFFC5555;
 80001f6:	6823      	ldr	r3, [r4, #0]
 80001f8:	4a30      	ldr	r2, [pc, #192]	; (80002bc <main+0xd8>)
    	int value = GPIOB->IDR &= (1U << 8);
 80001fa:	2680      	movs	r6, #128	; 0x80
    GPIOB->MODER &= 0xFFFC5555;
 80001fc:	4013      	ands	r3, r2
 80001fe:	6023      	str	r3, [r4, #0]
    mode = mode0;
 8000200:	4b2f      	ldr	r3, [pc, #188]	; (80002c0 <main+0xdc>)
 8000202:	2500      	movs	r5, #0
 8000204:	4698      	mov	r8, r3
	GPIOB->ODR &= 0x0000;
 8000206:	2700      	movs	r7, #0
    	int value = GPIOB->IDR &= (1U << 8);
 8000208:	0076      	lsls	r6, r6, #1
 800020a:	6923      	ldr	r3, [r4, #16]
 800020c:	4033      	ands	r3, r6
 800020e:	6123      	str	r3, [r4, #16]
    	    if (value == 0x100){
 8000210:	d003      	beq.n	800021a <main+0x36>
    			if(mode == mode5) //If code at the last mode, change to first mode
 8000212:	2d05      	cmp	r5, #5
 8000214:	d041      	beq.n	800029a <main+0xb6>
    				mode ++; //Change mode
 8000216:	3501      	adds	r5, #1
 8000218:	b2ed      	uxtb	r5, r5
    	switch(mode){
 800021a:	2d05      	cmp	r5, #5
 800021c:	d83d      	bhi.n	800029a <main+0xb6>
 800021e:	4642      	mov	r2, r8
 8000220:	00ab      	lsls	r3, r5, #2
 8000222:	58d3      	ldr	r3, [r2, r3]
 8000224:	469f      	mov	pc, r3
	GPIOB->ODR |= 0x0066;
 8000226:	2266      	movs	r2, #102	; 0x66
	GPIOB->ODR &= 0x0000;
 8000228:	6963      	ldr	r3, [r4, #20]
 800022a:	6167      	str	r7, [r4, #20]
	GPIOB->ODR |= 0x0066;
 800022c:	6963      	ldr	r3, [r4, #20]
    			Toggle05s(mode);
 800022e:	2004      	movs	r0, #4
	GPIOB->ODR |= 0x0066;
 8000230:	4313      	orrs	r3, r2
 8000232:	6163      	str	r3, [r4, #20]
    			Toggle05s(mode);
 8000234:	f7ff ffa6 	bl	8000184 <Toggle05s>
    	delay(600000); //Delay for getting hand back from button
 8000238:	4b22      	ldr	r3, [pc, #136]	; (80002c4 <main+0xe0>)
    for(; s>0; s--);
 800023a:	3b01      	subs	r3, #1
 800023c:	2b00      	cmp	r3, #0
 800023e:	d1fc      	bne.n	800023a <main+0x56>
 8000240:	e7e3      	b.n	800020a <main+0x26>
	GPIOB->ODR |= 0x004F;
 8000242:	224f      	movs	r2, #79	; 0x4f
	GPIOB->ODR &= 0x0000;
 8000244:	6963      	ldr	r3, [r4, #20]
 8000246:	6167      	str	r7, [r4, #20]
	GPIOB->ODR |= 0x004F;
 8000248:	6963      	ldr	r3, [r4, #20]
    			Toggle1s(mode);
 800024a:	2003      	movs	r0, #3
	GPIOB->ODR |= 0x004F;
 800024c:	4313      	orrs	r3, r2
 800024e:	6163      	str	r3, [r4, #20]
    			Toggle1s(mode);
 8000250:	f7ff ff80 	bl	8000154 <Toggle1s>
    	delay(600000); //Delay for getting hand back from button
 8000254:	4b1b      	ldr	r3, [pc, #108]	; (80002c4 <main+0xe0>)
    for(; s>0; s--);
 8000256:	e7f0      	b.n	800023a <main+0x56>
	GPIOB->ODR |= 0x005B;
 8000258:	225b      	movs	r2, #91	; 0x5b
	GPIOB->ODR &= 0x0000;
 800025a:	6963      	ldr	r3, [r4, #20]
 800025c:	6167      	str	r7, [r4, #20]
	GPIOB->ODR |= 0x005B;
 800025e:	6963      	ldr	r3, [r4, #20]
    			Toggle2s(mode);
 8000260:	2002      	movs	r0, #2
	GPIOB->ODR |= 0x005B;
 8000262:	4313      	orrs	r3, r2
 8000264:	6163      	str	r3, [r4, #20]
    			Toggle2s(mode);
 8000266:	f7ff ff5d 	bl	8000124 <Toggle2s>
    	delay(600000); //Delay for getting hand back from button
 800026a:	4b16      	ldr	r3, [pc, #88]	; (80002c4 <main+0xe0>)
    for(; s>0; s--);
 800026c:	e7e5      	b.n	800023a <main+0x56>
	GPIOB->ODR |= 0x0006;
 800026e:	2206      	movs	r2, #6
	GPIOB->ODR &= 0x0000;
 8000270:	6963      	ldr	r3, [r4, #20]
 8000272:	6167      	str	r7, [r4, #20]
	GPIOB->ODR |= 0x0006;
 8000274:	6963      	ldr	r3, [r4, #20]
    			noToggleLedOn(mode);
 8000276:	2001      	movs	r0, #1
	GPIOB->ODR |= 0x0006;
 8000278:	4313      	orrs	r3, r2
 800027a:	6163      	str	r3, [r4, #20]
    			noToggleLedOn(mode);
 800027c:	f7ff ff4a 	bl	8000114 <noToggleLedOn>
    	delay(600000); //Delay for getting hand back from button
 8000280:	4b10      	ldr	r3, [pc, #64]	; (80002c4 <main+0xe0>)
    for(; s>0; s--);
 8000282:	e7da      	b.n	800023a <main+0x56>
	GPIOB->ODR |= 0x006D;
 8000284:	226d      	movs	r2, #109	; 0x6d
	GPIOB->ODR &= 0x0000;
 8000286:	6963      	ldr	r3, [r4, #20]
 8000288:	6167      	str	r7, [r4, #20]
	GPIOB->ODR |= 0x006D;
 800028a:	6963      	ldr	r3, [r4, #20]
    			Toggle01s(mode);
 800028c:	2005      	movs	r0, #5
	GPIOB->ODR |= 0x006D;
 800028e:	4313      	orrs	r3, r2
 8000290:	6163      	str	r3, [r4, #20]
    			Toggle01s(mode);
 8000292:	f7ff ff8f 	bl	80001b4 <Toggle01s>
    	delay(600000); //Delay for getting hand back from button
 8000296:	4b0b      	ldr	r3, [pc, #44]	; (80002c4 <main+0xe0>)
    for(; s>0; s--);
 8000298:	e7cf      	b.n	800023a <main+0x56>
	GPIOB->ODR |= 0x003F;
 800029a:	223f      	movs	r2, #63	; 0x3f
	GPIOB->ODR &= 0x0000;
 800029c:	6963      	ldr	r3, [r4, #20]
 800029e:	6167      	str	r7, [r4, #20]
	GPIOB->ODR |= 0x003F;
 80002a0:	6963      	ldr	r3, [r4, #20]
    			noToggleLedOff(mode); //Set mode
 80002a2:	2000      	movs	r0, #0
	GPIOB->ODR |= 0x003F;
 80002a4:	4313      	orrs	r3, r2
 80002a6:	6163      	str	r3, [r4, #20]
    			noToggleLedOff(mode); //Set mode
 80002a8:	f7ff ff2c 	bl	8000104 <noToggleLedOff>
    for(; s>0; s--);
 80002ac:	2500      	movs	r5, #0
 80002ae:	4b05      	ldr	r3, [pc, #20]	; (80002c4 <main+0xe0>)
 80002b0:	e7c3      	b.n	800023a <main+0x56>
 80002b2:	46c0      	nop			; (mov r8, r8)
 80002b4:	40021000 	.word	0x40021000
 80002b8:	50000400 	.word	0x50000400
 80002bc:	fffc5555 	.word	0xfffc5555
 80002c0:	0800038c 	.word	0x0800038c
 80002c4:	000927c0 	.word	0x000927c0

080002c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c8:	480d      	ldr	r0, [pc, #52]	; (8000300 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ca:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002cc:	f000 f826 	bl	800031c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d0:	480c      	ldr	r0, [pc, #48]	; (8000304 <LoopForever+0x6>)
  ldr r1, =_edata
 80002d2:	490d      	ldr	r1, [pc, #52]	; (8000308 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d4:	4a0d      	ldr	r2, [pc, #52]	; (800030c <LoopForever+0xe>)
  movs r3, #0
 80002d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d8:	e002      	b.n	80002e0 <LoopCopyDataInit>

080002da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002de:	3304      	adds	r3, #4

080002e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e4:	d3f9      	bcc.n	80002da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e6:	4a0a      	ldr	r2, [pc, #40]	; (8000310 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e8:	4c0a      	ldr	r4, [pc, #40]	; (8000314 <LoopForever+0x16>)
  movs r3, #0
 80002ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002ec:	e001      	b.n	80002f2 <LoopFillZerobss>

080002ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f0:	3204      	adds	r2, #4

080002f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f4:	d3fb      	bcc.n	80002ee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002f6:	f000 f819 	bl	800032c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002fa:	f7ff ff73 	bl	80001e4 <main>

080002fe <LoopForever>:

LoopForever:
    b LoopForever
 80002fe:	e7fe      	b.n	80002fe <LoopForever>
  ldr   r0, =_estack
 8000300:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000304:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000308:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800030c:	080003ac 	.word	0x080003ac
  ldr r2, =_sbss
 8000310:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000314:	2000001c 	.word	0x2000001c

08000318 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000318:	e7fe      	b.n	8000318 <ADC_COMP_IRQHandler>
	...

0800031c <SystemInit>:
{
  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800031c:	2280      	movs	r2, #128	; 0x80
 800031e:	4b02      	ldr	r3, [pc, #8]	; (8000328 <SystemInit+0xc>)
 8000320:	0512      	lsls	r2, r2, #20
 8000322:	609a      	str	r2, [r3, #8]
#endif
}
 8000324:	4770      	bx	lr
 8000326:	46c0      	nop			; (mov r8, r8)
 8000328:	e000ed00 	.word	0xe000ed00

0800032c <__libc_init_array>:
 800032c:	b570      	push	{r4, r5, r6, lr}
 800032e:	2600      	movs	r6, #0
 8000330:	4d0c      	ldr	r5, [pc, #48]	; (8000364 <__libc_init_array+0x38>)
 8000332:	4c0d      	ldr	r4, [pc, #52]	; (8000368 <__libc_init_array+0x3c>)
 8000334:	1b64      	subs	r4, r4, r5
 8000336:	10a4      	asrs	r4, r4, #2
 8000338:	42a6      	cmp	r6, r4
 800033a:	d109      	bne.n	8000350 <__libc_init_array+0x24>
 800033c:	2600      	movs	r6, #0
 800033e:	f000 f819 	bl	8000374 <_init>
 8000342:	4d0a      	ldr	r5, [pc, #40]	; (800036c <__libc_init_array+0x40>)
 8000344:	4c0a      	ldr	r4, [pc, #40]	; (8000370 <__libc_init_array+0x44>)
 8000346:	1b64      	subs	r4, r4, r5
 8000348:	10a4      	asrs	r4, r4, #2
 800034a:	42a6      	cmp	r6, r4
 800034c:	d105      	bne.n	800035a <__libc_init_array+0x2e>
 800034e:	bd70      	pop	{r4, r5, r6, pc}
 8000350:	00b3      	lsls	r3, r6, #2
 8000352:	58eb      	ldr	r3, [r5, r3]
 8000354:	4798      	blx	r3
 8000356:	3601      	adds	r6, #1
 8000358:	e7ee      	b.n	8000338 <__libc_init_array+0xc>
 800035a:	00b3      	lsls	r3, r6, #2
 800035c:	58eb      	ldr	r3, [r5, r3]
 800035e:	4798      	blx	r3
 8000360:	3601      	adds	r6, #1
 8000362:	e7f2      	b.n	800034a <__libc_init_array+0x1e>
 8000364:	080003a4 	.word	0x080003a4
 8000368:	080003a4 	.word	0x080003a4
 800036c:	080003a4 	.word	0x080003a4
 8000370:	080003a8 	.word	0x080003a8

08000374 <_init>:
 8000374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000376:	46c0      	nop			; (mov r8, r8)
 8000378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037a:	bc08      	pop	{r3}
 800037c:	469e      	mov	lr, r3
 800037e:	4770      	bx	lr

08000380 <_fini>:
 8000380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000382:	46c0      	nop			; (mov r8, r8)
 8000384:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000386:	bc08      	pop	{r3}
 8000388:	469e      	mov	lr, r3
 800038a:	4770      	bx	lr
